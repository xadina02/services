/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_sqlite_database_sqlite_SQLiteConnection */

#ifndef _Included_org_sqlite_database_sqlite_SQLiteConnection
#define _Included_org_sqlite_database_sqlite_SQLiteConnection
#ifdef __cplusplus
extern "C" {
#endif
#undef org_sqlite_database_sqlite_SQLiteConnection_DEBUG
#define org_sqlite_database_sqlite_SQLiteConnection_DEBUG 0L
#undef org_sqlite_database_sqlite_SQLiteConnection_TRANSACTION_MODE_DEFERRED
#define org_sqlite_database_sqlite_SQLiteConnection_TRANSACTION_MODE_DEFERRED 0L
#undef org_sqlite_database_sqlite_SQLiteConnection_TRANSACTION_MODE_IMMEDIATE
#define org_sqlite_database_sqlite_SQLiteConnection_TRANSACTION_MODE_IMMEDIATE 1L
#undef org_sqlite_database_sqlite_SQLiteConnection_TRANSACTION_MODE_EXCLUSIVE
#define org_sqlite_database_sqlite_SQLiteConnection_TRANSACTION_MODE_EXCLUSIVE 2L
#undef org_sqlite_database_sqlite_SQLiteConnection_CONFLICT_ROLLBACK
#define org_sqlite_database_sqlite_SQLiteConnection_CONFLICT_ROLLBACK 1L
#undef org_sqlite_database_sqlite_SQLiteConnection_CONFLICT_ABORT
#define org_sqlite_database_sqlite_SQLiteConnection_CONFLICT_ABORT 2L
#undef org_sqlite_database_sqlite_SQLiteConnection_CONFLICT_FAIL
#define org_sqlite_database_sqlite_SQLiteConnection_CONFLICT_FAIL 3L
#undef org_sqlite_database_sqlite_SQLiteConnection_CONFLICT_IGNORE
#define org_sqlite_database_sqlite_SQLiteConnection_CONFLICT_IGNORE 4L
#undef org_sqlite_database_sqlite_SQLiteConnection_CONFLICT_REPLACE
#define org_sqlite_database_sqlite_SQLiteConnection_CONFLICT_REPLACE 5L
#undef org_sqlite_database_sqlite_SQLiteConnection_CONFLICT_NONE
#define org_sqlite_database_sqlite_SQLiteConnection_CONFLICT_NONE 0L
#undef org_sqlite_database_sqlite_SQLiteConnection_SQLITE_MAX_LIKE_PATTERN_LENGTH
#define org_sqlite_database_sqlite_SQLiteConnection_SQLITE_MAX_LIKE_PATTERN_LENGTH 50000L
#undef org_sqlite_database_sqlite_SQLiteConnection_OPEN_READWRITE
#define org_sqlite_database_sqlite_SQLiteConnection_OPEN_READWRITE 0L
#undef org_sqlite_database_sqlite_SQLiteConnection_NO_LOCALIZED_COLLATORS
#define org_sqlite_database_sqlite_SQLiteConnection_NO_LOCALIZED_COLLATORS 16L
#undef org_sqlite_database_sqlite_SQLiteConnection_CREATE_IF_NECESSARY
#define org_sqlite_database_sqlite_SQLiteConnection_CREATE_IF_NECESSARY 268435456L
#undef org_sqlite_database_sqlite_SQLiteConnection_ENABLE_WRITE_AHEAD_LOGGING
#define org_sqlite_database_sqlite_SQLiteConnection_ENABLE_WRITE_AHEAD_LOGGING 536870912L
/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeInit
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeInit
  (JNIEnv *, jclass);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeOpen
 * Signature: (Ljava/lang/String;ILjava/lang/String;ZZ)J
 */
JNIEXPORT jlong JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeOpen
  (JNIEnv *, jclass, jstring, jint, jstring, jboolean, jboolean);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeClose
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeClose
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativePrepareStatement
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativePrepareStatement
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeFinalizeStatement
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeFinalizeStatement
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeGetParameterCount
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeGetParameterCount
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeIsReadOnly
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeIsReadOnly
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeBindNull
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeBindNull
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeBindLong
 * Signature: (JJIJ)V
 */
JNIEXPORT void JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeBindLong
  (JNIEnv *, jclass, jlong, jlong, jint, jlong);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeBindDouble
 * Signature: (JJID)V
 */
JNIEXPORT void JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeBindDouble
  (JNIEnv *, jclass, jlong, jlong, jint, jdouble);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeBindString
 * Signature: (JJILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeBindString
  (JNIEnv *, jclass, jlong, jlong, jint, jstring);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeBindBlob
 * Signature: (JJI[B)V
 */
JNIEXPORT void JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeBindBlob
  (JNIEnv *, jclass, jlong, jlong, jint, jbyteArray);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeResetStatementAndClearBindings
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeResetStatementAndClearBindings
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeExecute
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeExecute
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeExecuteForLong
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeExecuteForLong
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeExecuteForString
 * Signature: (JJ)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeExecuteForString
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeExecuteForChangedRowCount
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeExecuteForChangedRowCount
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeExecuteForLastInsertedRowId
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeExecuteForLastInsertedRowId
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeExecuteForObjectArray
 * Signature: (JJ)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeExecuteForObjectArray
        (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeCancel
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeCancel
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_sqlite_database_sqlite_SQLiteConnection
 * Method:    nativeResetCancel
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_sqlite_database_sqlite_SQLiteConnection_nativeResetCancel
  (JNIEnv *, jclass, jlong, jboolean);

#ifdef __cplusplus
}
#endif
#endif
